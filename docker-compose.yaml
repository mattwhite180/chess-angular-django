version: "3.3"

services:
  db:
    restart: always
    image: postgres
    networks:
      - testing_net
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - .postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=myproject
      - POSTGRES_USER=myprojectuser
      - POSTGRES_PASSWORD=password
  api:
    restart: always
    build: api/
    # command: /bin/bash -c "python tests.py"
    # command: bash -c "sleep infinity"
    # command: ls
    command: bash django-run.sh
    volumes:
      - "./api/chesssite:/usr/src/app/"
    # command: ls
    # volumes:
    #   - "./server:/usr/src/app/"
    expose:
      - "8000"
    ports:
      - "8000"
    networks:
      - testing_net
    links:
      - db:db
    depends_on:
      - db
    environment:
      - PGHOST=db
      - PGDATABASE=myproject
      - PGUSER=myprojectuser
      - PGPASSWORD=password
  client:
    restart: always
    build: client/
    # command: bash -c "sleep infinity"
    # command: ls
    # command: bash runscript.sh
    #command: bash -c "ng serve --host 0.0.0.0"
    command: bash -c "ng serve --host=0.0.0.0 --disable-host-check"
    # volumes:
    #  - "./client:/app"
    expose:
      - "4200"
    ports:
      - '4200:4200'
    networks:
      - testing_net
    depends_on:
      - api
  middleman:
    image: nginx:latest
    volumes:
      - ./nginx-middleman.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - testing_net
    ports:
      - "4000:4000"
    expose:
      - "4000"
  frontman:
    image: nginx:latest
    volumes:
      - ./nginx-frontman.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
    networks:
      - testing_net
    ports:
      - "80:80"
    expose:
      - "80"
volumes:
  postgres_data:

networks:
  testing_net:
    driver: "bridge"
